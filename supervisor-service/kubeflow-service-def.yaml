apiVersion: appplatform.wcp.vmware.com/v1alpha2
kind: SupervisorServiceDefinition
metadata:
  name: placeholder
spec:
  crdYaml:
    content: "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\n\
      metadata:\n  name: kubeflows.peach.vmware.com\nspec:\n  group: peach.vmware.com\n\
      \  names:\n    kind: Kubeflow\n    listKind: KubeflowList\n    plural: kubeflows\n\
      \    singular: kubeflow\n  scope: Namespaced\n  versions:\n  - name: v1alpha1\n\
      \    schema:\n      openAPIV3Schema:\n        description: Kubeflow is the Schema\
      \ for the kubeflows API\n        properties:\n          apiVersion:\n      \
      \      description: 'APIVersion defines the versioned schema of this representation\n\
      \              of an object. Servers should convert recognized schemas to the\
      \ latest\n              internal value, and may reject unrecognized values.\
      \ More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n\
      \            type: string\n          kind:\n            description: 'Kind is\
      \ a string value representing the REST resource this\n              object represents.\
      \ Servers may infer this from the endpoint the client\n              submits\
      \ requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n\
      \            type: string\n          metadata:\n            type: object\n \
      \         spec:\n            description: Spec defines the desired state of\
      \ Kubeflow\n            type: object\n            x-kubernetes-preserve-unknown-fields:\
      \ true\n          status:\n            description: Status defines the observed\
      \ state of Kubeflow\n            type: object\n            x-kubernetes-preserve-unknown-fields:\
      \ true\n        type: object\n    served: true\n    storage: true\n    subresources:\n\
      \      status: {}\n"
    format: plain
  description: This service was generated on 2022-11-25 by create-vsphere-app.py
  label: Kubeflow
  operatorYaml:
    content: "# RBAC rules are overly broad now.\n\napiVersion: rbac.authorization.k8s.io/v1\n\
      kind: Role\nmetadata:\n  name: {{ .service.prefix }}-leader-election-role\n\
      \  namespace: {{ .service.namespace }}\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n\
      \  - configmaps\n  verbs:\n  - get\n  - list\n  - watch\n  - create\n  - update\n\
      \  - patch\n  - delete\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n\
      \  - leases\n  verbs:\n  - get\n  - list\n  - watch\n  - create\n  - update\n\
      \  - patch\n  - delete\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n \
      \ verbs:\n  - create\n  - patch\n---\napiVersion: rbac.authorization.k8s.io/v1\n\
      kind: ClusterRole\nmetadata:\n  creationTimestamp: null\n  labels:\n    component:\
      \ '{{ .service.prefix }}-operator'\n  name: '{{ .service.prefix }}-operator'\n\
      rules:\n- apiGroups:\n  - '*'\n  resources:\n  - '*'\n  verbs:\n  - '*'\n- nonResourceURLs:\n\
      \  - '*'\n  verbs:\n  - '*'\n---\napiVersion: rbac.authorization.k8s.io/v1\n\
      kind: ClusterRole\nmetadata:\n  labels:\n    component: '{{ .service.prefix\
      \ }}-operator'\n    rbac.authorization.k8s.io/aggregate-to-edit: \"true\"\n\
      \  name: '{{ .service.prefix }}-kubeflow-editor-role'\nrules:\n- apiGroups:\n\
      \  - '*'\n  resources:\n  - '*'\n  verbs:\n  - '*'\n- nonResourceURLs:\n  -\
      \ '*'\n  verbs:\n  - '*'\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind:\
      \ ClusterRole\nmetadata:\n  labels:\n    component: '{{ .service.prefix }}-operator'\n\
      \    rbac.authorization.k8s.io/aggregate-to-view: \"true\"\n  name: '{{ .service.prefix\
      \ }}-kubeflow-viewer-role'\nrules:\n- apiGroups:\n  - '*'\n  resources:\n  -\
      \ '*'\n  verbs:\n  - '*'\n- nonResourceURLs:\n  - '*'\n  verbs:\n  - '*'\n---\n\
      apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name:\
      \ {{ .service.prefix }}-leader-election-rolebinding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n\
      \  kind: Role\n  name: {{ .service.prefix }}-leader-election-role\nsubjects:\n\
      - kind: ServiceAccount\n  name: default\n  namespace: {{ .service.namespace\
      \ }}\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\n\
      metadata:\n  labels:\n    component: '{{ .service.prefix }}-operator'\n  name:\
      \ '{{ .service.prefix }}-operator'\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n\
      \  kind: ClusterRole\n  name: '{{ .service.prefix }}-operator'\nsubjects:\n\
      - kind: ServiceAccount\n  name: default\n  namespace: {{ .service.namespace\
      \ }}\n---\napiVersion: v1\ndata:\n  controller_manager_config.yaml: |\n    apiVersion:\
      \ controller-runtime.sigs.k8s.io/v1alpha1\n    kind: ControllerManagerConfig\n\
      \    health:\n      healthProbeBindAddress: :8081\n    metrics:\n      bindAddress:\
      \ 127.0.0.1:8080\n\n    leaderElection:\n      leaderElect: true\n      resourceName:\
      \ 811c9dc5.vmware.com\nkind: ConfigMap\nmetadata:\n  name: {{ .service.prefix\
      \ }}-manager-config\n  namespace: {{ .service.namespace }}\n---\napiVersion:\
      \ apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    component: '{{ .service.prefix\
      \ }}-operator'\n  name: '{{ .service.prefix }}-operator'\n  namespace: '{{ .service.namespace\
      \ }}'\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      component:\
      \ '{{ .service.prefix }}-operator'\n  template:\n    metadata:\n      labels:\n\
      \        component: '{{ .service.prefix }}-operator'\n    spec:\n      containers:\n\
      \      - args:\n        - --secure-listen-address=0.0.0.0:8443\n        - --upstream=http://127.0.0.1:8080/\n\
      \        - --logtostderr=true\n        - --v=0\n        image: {{ .Values.registryName\
      \ | default \"projects.registry.vmware.com/kubeflow\" }}/kubebuilder/kube-rbac-proxy:v0.8.0\n\
      \        imagePullPolicy: IfNotPresent\n        name: kube-rbac-proxy\n    \
      \    ports:\n        - containerPort: 8443\n          name: https\n        \
      \  protocol: TCP\n        resources:\n          limits:\n            cpu: 500m\n\
      \            memory: 128Mi\n          requests:\n            cpu: 5m\n     \
      \       memory: 64Mi\n      - args:\n        - --health-probe-bind-address=:8081\n\
      \        - --metrics-bind-address=127.0.0.1:8080\n        - --leader-elect\n\
      \        - --leader-election-id=kubeflow-operator\n        image: projects.registry.vmware.com/kubeflow/supervisor-service-operator:0.0.1\n\
      \        imagePullPolicy: IfNotPresent\n        livenessProbe:\n          httpGet:\n\
      \            path: /healthz\n            port: 8081\n          initialDelaySeconds:\
      \ 15\n          periodSeconds: 20\n        name: manager\n        readinessProbe:\n\
      \          httpGet:\n            path: /readyz\n            port: 8081\n   \
      \       initialDelaySeconds: 5\n          periodSeconds: 10\n        resources:\n\
      \          limits:\n            cpu: 500m\n            memory: 256Mi\n     \
      \     requests:\n            cpu: 10m\n            memory: 128Mi\n      terminationGracePeriodSeconds:\
      \ 10"
    format: plain
  serviceID: kubeflow
  version: 0.0.1
