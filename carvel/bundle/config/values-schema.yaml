#@data/values-schema
---

#@schema/desc 'Add labels k8s.twr.io/imageswap: enabled to Kubeflow namespaces, which enable imageswap webhook to swap images.'
imageswap_labels: True

#@schema/desc 'Service type of istio-ingressgateway. Available options: "LoadBalancer" or "NodePort"'
service_type: "LoadBalancer"

#@schema/desc 'EXTERNAL_IP address of istio-ingressgateway, valid only if service_type is LoadBalancer'
IP_address: ""

#@schema/desc 'Turn on Registration Flow, so that Kubeflow Central Dashboard will prompt new users to create a namespace (profile)'
CD_REGISTRATION_FLOW: True

#@schema/desc 'Configuration of OIDC_Authservice, the OIDC_Authservice is connected to embedded Dex by default'
OIDC_Authservice:
  #@schema/desc 'AuthService will initiate an Authorization Code OIDC flow by hitting this URL. Normally discovered automatically through the OIDC Provider\'s well-known endpoint'
  OIDC_AUTH_URL: /dex/auth
  #@schema/desc 'URL to your OIDC provider. AuthService expects to find information about your OIDC provider at OIDC_PROVIDER/.well-known/openid-configuration, and will use this information to contact your OIDC provider and initiate an OIDC flow later on'
  OIDC_PROVIDER: http://dex.auth.svc.cluster.local:5556/dex
  #@schema/desc 'Comma-separated list of scopes to request access to. The openid scope is always added.'
  OIDC_SCOPES: "profile email groups"
  #@schema/desc 'AuthService will pass this URL to the OIDC provider when initiating an OIDC flow, so the OIDC provider knows where it needs to send the OIDC authorization code to. It defaults to AUTHSERVICE_URL_PREFIX/oidc/callback. This assumes that you have configured your API Gateway to pass all requests under a hostname to Authservice for authentication'
  REDIRECT_URL: /login/oidc
  #@schema/desc 'Comma-separated list of URL path-prefixes for which to bypass authentication. For example, if SKIP_AUTH_URL contains /my_app/ then requests to <url>/my_app/* are allowed without checking any credentials. Contains nothing by default'
  SKIP_AUTH_URI: "/dex"
  #@schema/desc 'Claim whose value will be used as the userid (default email)'
  USERID_CLAIM: email
  #@schema/desc 'Name of the header containing the user-id that will be added to the upstream request'
  USERID_HEADER: kubeflow-userid
  #@schema/desc 'Prefix to add to the userid, which will be the value of the USERID_HEADER'
  USERID_PREFIX: ""
  #@schema/desc 'AuthService will use this Client ID when it needs to contact your OIDC provider and initiate an OIDC flow'
  OIDC_CLIENT_ID: kubeflow-oidc-authservice
  #@schema/desc 'AuthService will use this Client Secret to authenticate itself against your OIDC provider in combination with CLIENT_ID when attempting to access your OIDC Provider\'s protected endpoints'
  OIDC_CLIENT_SECRET: pUBnBOY80SnXgjibTYM9ZWNzY2xreNGQok

#@schema/desc 'Configuration of Dex service'
Dex:
  #@schema/desc 'If set to True, the embedded Dex will not be created, and you will need to configure OIDC_Authservice with external IdP manually'
  use_external: False
  #@schema/desc 'Configuration file of Dex'
  config: |
    issuer: http://dex.auth.svc.cluster.local:5556/dex
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5556
    logger:
      level: "debug"
      format: text
    oauth2:
      skipApprovalScreen: true
    enablePasswordDB: true
    staticPasswords:
    - email: user@example.com
      hash: $2y$12$4K/VkmDd1q1Orb3xAt82zu8gk7Ad6ReFR4LCP9UeYE90NLiN9Df72
      # https://github.com/dexidp/dex/pull/1601/commits
      # FIXME: Use hashFromEnv instead
      username: user
      userID: "15841185641784"
    staticClients:
    # https://github.com/dexidp/dex/pull/1664
    - idEnv: OIDC_CLIENT_ID
      redirectURIs: ["/login/oidc"]
      name: 'Dex Login Application'
      secretEnv: OIDC_CLIENT_SECRET